Install Helm chart:
-------------------
$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh

Create HELM Chart
-----------------
helm create hello-world

hello-world/
├── charts
├── Chart.yaml
├── templates
│   ├── deployment.yaml
│   ├── _helpers.tpl
│   ├── hpa.yaml
│   ├── ingress.yaml
│   ├── NOTES.txt
│   ├── serviceaccount.yaml
│   ├── service.yaml
│   └── tests
│       └── test-connection.yaml
└── values.yaml

3 directories, 10 files
==============================================================================================================
Chart.yaml: This is the main file that contains the description of our chart
values.yaml: this is the file that contains the default values for our chart
templates: This is the directory where Kubernetes resources are defined as templates
charts: This is an optional directory that may contain sub-charts

HELM Commands for Chart
-----------------

- helm list <chart-full-path>
This is a simple command that takes the path to a chart and runs a battery of tests to ensure that the chart is well-formed

- helm template <chart-full-path>
This will generate all templates with variables without a Tiller Server, for quick feedback, and show the output. Now that we know everything is OK, we can deploy the chart:

- helm install <release-name> <chart-full-path> --generate-name
#Run this command to install the chart into the Kubernetes cluster:

- helm ls --all
#We would like to see which charts are installed as what release.

- helm upgrade <release-name> <chart-full-path>
#This command helps us to upgrade a release to a specified or current version of the chart or configuration:

- helm rollback <release-name> <release-version>
#This is the command to rollback a release to the previous version:

- helm delete --purge <release-name>
#We can use this command to delete a release from Kubernetes:
